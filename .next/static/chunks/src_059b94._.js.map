{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAIA;AAHA;AACA;AAAA;AAJA;;;;;;AAQA,MAAM,SAAS,sKAAgB,IAAI;AAEnC,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,cAAc,sKAAgB,KAAK;AAEzC,MAAM,8BAAgB,8JAAM,UAAU,MAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,sKAAgB,OAAO;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6RACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,sKAAgB,IAAI;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,8BAAgB,8JAAM,UAAU,OAGpC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,6LAAC,sKAAgB,MAAM;kBACrB,cAAA,6LAAC,sKAAgB,OAAO;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8bACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;sBAET,cAAA,6LAAC,sKAAgB,QAAQ;gBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;0BAGH;;;;;;;;;;;;;;;;;AAKT,cAAc,WAAW,GAAG,sKAAgB,OAAO,CAAC,WAAW;AAE/D,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,KAAK;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,sKAAgB,KAAK,CAAC,WAAW;AAE3D,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,sKAAgB,IAAI;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,sKAAgB,aAAa;8BAC5B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,sKAAgB,QAAQ;0BAAE;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,sKAAgB,IAAI,CAAC,WAAW;AAEzD,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,sKAAgB,SAAS;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG,sKAAgB,SAAS,CAAC,WAAW"}},
    {"offset": {"line": 266, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 272, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/app/usage/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card } from \"@/components/ui/card\"\nimport { DataTable } from \"@/components/ui/data-table\"\nimport { ArrowUpDown } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { ColumnDef } from \"@tanstack/react-table\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { useState, useMemo } from \"react\"\nimport { useReactTable, getCoreRowModel, getPaginationRowModel, getSortedRowModel, getFilteredRowModel } from '@tanstack/react-table'\n\n// Generate more realistic sample data with 50 entries\nexport const usageData = [\n  {\n    id: 1,\n    team: \"ML Research\",\n    instanceType: \"p4d.24xlarge\",\n    usageHours: 245.5,\n    costPerHour: 32.77,\n    totalCost: 8045.04,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 2,\n    team: \"Data Science\",\n    instanceType: \"p3.16xlarge\",\n    usageHours: 180.2,\n    costPerHour: 24.48,\n    totalCost: 4411.30,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 3,\n    team: \"Computer Vision\",\n    instanceType: \"g5.12xlarge\",\n    usageHours: 320.8,\n    costPerHour: 15.12,\n    totalCost: 4850.50,\n    billingPeriod: \"Nov 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 4,\n    team: \"NLP Team\",\n    instanceType: \"g4dn.12xlarge\",\n    usageHours: 156.4,\n    costPerHour: 12.24,\n    totalCost: 1914.34,\n    billingPeriod: \"Nov 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 5,\n    team: \"Recommendation Systems\",\n    instanceType: \"c6i.32xlarge\",\n    usageHours: 278.6,\n    costPerHour: 5.44,\n    totalCost: 1515.58,\n    billingPeriod: \"Oct 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 6,\n    team: \"MLOps\",\n    instanceType: \"p4d.24xlarge\",\n    usageHours: 412.3,\n    costPerHour: 32.77,\n    totalCost: 13511.07,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 7,\n    team: \"AI Infrastructure\",\n    instanceType: \"p3.16xlarge\",\n    usageHours: 267.8,\n    costPerHour: 24.48,\n    totalCost: 6555.74,\n    billingPeriod: \"Dec 2023\",\n    status: \"Suspended\"\n  },\n  {\n    id: 8,\n    team: \"Deep Learning\",\n    instanceType: \"g5.12xlarge\",\n    usageHours: 189.5,\n    costPerHour: 15.12,\n    totalCost: 2865.24,\n    billingPeriod: \"Nov 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 9,\n    team: \"Model Training\",\n    instanceType: \"g4dn.12xlarge\",\n    usageHours: 345.2,\n    costPerHour: 12.24,\n    totalCost: 4225.25,\n    billingPeriod: \"Nov 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 10,\n    team: \"Analytics\",\n    instanceType: \"c6i.32xlarge\",\n    usageHours: 156.7,\n    costPerHour: 5.44,\n    totalCost: 852.45,\n    billingPeriod: \"Oct 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 11,\n    team: \"ML Research\",\n    instanceType: \"g5.12xlarge\",\n    usageHours: 198.4,\n    costPerHour: 15.12,\n    totalCost: 2999.81,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 12,\n    team: \"Data Science\",\n    instanceType: \"p3.16xlarge\",\n    usageHours: 287.6,\n    costPerHour: 24.48,\n    totalCost: 7040.45,\n    billingPeriod: \"Nov 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 13,\n    team: \"Computer Vision\",\n    instanceType: \"g4dn.12xlarge\",\n    usageHours: 167.3,\n    costPerHour: 12.24,\n    totalCost: 2047.75,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 14,\n    team: \"NLP Team\",\n    instanceType: \"c6i.32xlarge\",\n    usageHours: 234.5,\n    costPerHour: 5.44,\n    totalCost: 1275.68,\n    billingPeriod: \"Nov 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 15,\n    team: \"MLOps\",\n    instanceType: \"p4d.24xlarge\",\n    usageHours: 312.8,\n    costPerHour: 32.77,\n    totalCost: 10250.46,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 16,\n    team: \"Deep Learning\",\n    instanceType: \"g5.12xlarge\",\n    usageHours: 178.9,\n    costPerHour: 15.12,\n    totalCost: 2705.97,\n    billingPeriod: \"Oct 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 17,\n    team: \"AI Infrastructure\",\n    instanceType: \"p3.16xlarge\",\n    usageHours: 289.4,\n    costPerHour: 24.48,\n    totalCost: 7084.51,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 18,\n    team: \"Model Training\",\n    instanceType: \"g4dn.12xlarge\",\n    usageHours: 145.6,\n    costPerHour: 12.24,\n    totalCost: 1782.14,\n    billingPeriod: \"Oct 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 19,\n    team: \"Analytics\",\n    instanceType: \"g5.12xlarge\",\n    usageHours: 223.7,\n    costPerHour: 15.12,\n    totalCost: 3382.34,\n    billingPeriod: \"Nov 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 20,\n    team: \"Recommendation Systems\",\n    instanceType: \"p4d.24xlarge\",\n    usageHours: 334.2,\n    costPerHour: 32.77,\n    totalCost: 10951.73,\n    billingPeriod: \"Oct 2023\",\n    status: \"Completed\"\n  },\n  {\n    id: 21,\n    team: \"ML Research\",\n    instanceType: \"p3.16xlarge\",\n    usageHours: 267.8,\n    costPerHour: 24.48,\n    totalCost: 6555.74,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 22,\n    team: \"Data Science\",\n    instanceType: \"g5.12xlarge\",\n    usageHours: 189.5,\n    costPerHour: 15.12,\n    totalCost: 2865.24,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 23,\n    team: \"Computer Vision\",\n    instanceType: \"g4dn.12xlarge\",\n    usageHours: 345.2,\n    costPerHour: 12.24,\n    totalCost: 4225.25,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 24,\n    team: \"NLP Team\",\n    instanceType: \"c6i.32xlarge\",\n    usageHours: 156.7,\n    costPerHour: 5.44,\n    totalCost: 852.45,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 25,\n    team: \"MLOps\",\n    instanceType: \"p4d.24xlarge\",\n    usageHours: 412.3,\n    costPerHour: 32.77,\n    totalCost: 13511.07,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 26,\n    team: \"Deep Learning\",\n    instanceType: \"p3.16xlarge\",\n    usageHours: 245.6,\n    costPerHour: 24.48,\n    totalCost: 6012.29,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 27,\n    team: \"AI Infrastructure\",\n    instanceType: \"g5.12xlarge\",\n    usageHours: 178.3,\n    costPerHour: 15.12,\n    totalCost: 2695.90,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 28,\n    team: \"Model Training\",\n    instanceType: \"g4dn.12xlarge\",\n    usageHours: 298.4,\n    costPerHour: 12.24,\n    totalCost: 3652.42,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 29,\n    team: \"Analytics\",\n    instanceType: \"c6i.32xlarge\",\n    usageHours: 167.5,\n    costPerHour: 5.44,\n    totalCost: 911.20,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  },\n  {\n    id: 30,\n    team: \"Recommendation Systems\",\n    instanceType: \"p4d.24xlarge\",\n    usageHours: 356.2,\n    costPerHour: 32.77,\n    totalCost: 11672.67,\n    billingPeriod: \"Dec 2023\",\n    status: \"Active\"\n  }\n]\n\ntype Usage = {\n  id: number\n  team: string\n  instanceType: string\n  usageHours: number\n  costPerHour: number\n  totalCost: number\n  billingPeriod: string\n  status: string\n}\n\nexport default function UsagePage() {\n  const [selectedInstanceType, setSelectedInstanceType] = useState<string>(\"all\")\n  const [selectedBillingPeriod, setSelectedBillingPeriod] = useState<string>(\"all\")\n  const [sorting, setSorting] = useState<SortingState>([])\n  const [columnFilters, setColumnFilters] = useState<ColumnFiltersState>([])\n  const [columnVisibility, setColumnVisibility] = useState<VisibilityState>({})\n  const [rowSelection, setRowSelection] = useState({})\n  const [pagination, setPagination] = useState<PaginationState>({\n    pageIndex: 0,\n    pageSize: 10,\n  })\n\n  const filteredData = useMemo(() => {\n    return usageData.filter(item => {\n      const matchesInstanceType = selectedInstanceType === \"all\" || item.instanceType === selectedInstanceType\n      const matchesBillingPeriod = selectedBillingPeriod === \"all\" || item.billingPeriod === selectedBillingPeriod\n      return matchesInstanceType && matchesBillingPeriod\n    })\n  }, [selectedInstanceType, selectedBillingPeriod])\n\n  const table = useReactTable({\n    data: filteredData,\n    columns: [\n      {\n        accessorKey: \"team\",\n        header: ({ column }) => {\n          return (\n            <Button\n              variant=\"ghost\"\n              onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n              className=\"flex h-8 items-center justify-start p-0 font-medium\"\n            >\n              Team\n              <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n            </Button>\n          )\n        },\n        cell: ({ row }) => <div className=\"text-left\">{row.getValue(\"team\")}</div>\n      },\n      {\n        accessorKey: \"instanceType\",\n        header: \"Instance Type\",\n        cell: ({ row }) => <div className=\"text-left\">{row.getValue(\"instanceType\")}</div>\n      },\n      {\n        accessorKey: \"usageHours\",\n        header: ({ column }) => {\n          return (\n            <div>\n              <Button\n                variant=\"ghost\"\n                onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n                className=\"flex h-8 items-center justify-start p-0 font-medium\"\n              >\n                Usage Hours\n                <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                Sum: {filteredData.reduce((sum, item) => sum + item.usageHours, 0).toFixed(1)}\n              </div>\n            </div>\n          )\n        },\n        cell: ({ row }) => <div className=\"text-left\">{row.getValue(\"usageHours\")}</div>\n      },\n      {\n        accessorKey: \"costPerHour\",\n        header: \"Cost/Hour\",\n        cell: ({ row }) => <div className=\"text-left\">${row.getValue(\"costPerHour\")}</div>\n      },\n      {\n        accessorKey: \"totalCost\",\n        header: ({ column }) => {\n          return (\n            <div>\n              <Button\n                variant=\"ghost\"\n                onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n                className=\"flex h-8 items-center justify-start p-0 font-medium\"\n              >\n                Total Cost\n                <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n              </Button>\n              <div className=\"text-xs text-muted-foreground mt-1\">\n                Sum: ${filteredData.reduce((sum, item) => sum + item.totalCost, 0).toFixed(2)}\n              </div>\n            </div>\n          )\n        },\n        cell: ({ row }) => {\n          const amount = parseFloat(row.getValue(\"totalCost\"));\n          const formatted = new Intl.NumberFormat(\"en-US\", {\n            style: \"currency\",\n            currency: \"USD\",\n          }).format(amount);\n          return <div className=\"text-left\">{formatted}</div>;\n        }\n      },\n      {\n        accessorKey: \"billingPeriod\",\n        header: \"Billing Period\",\n        cell: ({ row }) => <div className=\"text-left\">{row.getValue(\"billingPeriod\")}</div>\n      },\n      {\n        accessorKey: \"status\",\n        header: \"Status\",\n        cell: ({ row }) => <div className=\"text-left\">{row.getValue(\"status\")}</div>\n      },\n    ],\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    onColumnVisibilityChange: setColumnVisibility,\n    onRowSelectionChange: setRowSelection,\n    onPaginationChange: setPagination,\n    state: {\n      sorting,\n      columnFilters,\n      columnVisibility,\n      rowSelection,\n      pagination,\n    },\n  })\n\n  // Get unique instance types and billing periods for filters\n  const instanceTypes = [...new Set(usageData.map(item => item.instanceType))]\n  const billingPeriods = [...new Set(usageData.map(item => item.billingPeriod))]\n\n  return (\n    <div className=\"container mx-auto py-10 px-4\">\n      <div className=\"flex gap-4 mb-6\">\n        <div className=\"w-[200px]\">\n          <Select value={selectedInstanceType} onValueChange={setSelectedInstanceType}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select Instance Type\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Instance Types</SelectItem>\n              {instanceTypes.map((type) => (\n                <SelectItem key={type} value={type}>\n                  {type}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n        <div className=\"w-[200px]\">\n          <Select value={selectedBillingPeriod} onValueChange={setSelectedBillingPeriod}>\n            <SelectTrigger>\n              <SelectValue placeholder=\"Select Billing Period\" />\n            </SelectTrigger>\n            <SelectContent>\n              <SelectItem value=\"all\">All Periods</SelectItem>\n              {billingPeriods.map((period) => (\n                <SelectItem key={period} value={period}>\n                  {period}\n                </SelectItem>\n              ))}\n            </SelectContent>\n          </Select>\n        </div>\n      </div>\n      <Card className=\"p-0\">\n        <div className=\"rounded-md border\">\n          <Table>\n            <TableHeader>\n              {table.getHeaderGroups().map((headerGroup) => (\n                <TableRow key={headerGroup.id}>\n                  {headerGroup.headers.map((header) => {\n                    return (\n                      <TableHead key={header.id}>\n                        {header.isPlaceholder\n                          ? null\n                          : flexRender(\n                              header.column.columnDef.header,\n                              header.getContext()\n                            )}\n                      </TableHead>\n                    )\n                  })}\n                </TableRow>\n              ))}\n            </TableHeader>\n            <TableBody>\n              {table.getRowModel().rows?.length ? (\n                table.getRowModel().rows.map((row) => (\n                  <TableRow\n                    key={row.id}\n                    data-state={row.getIsSelected() && \"selected\"}\n                  >\n                    {row.getVisibleCells().map((cell) => (\n                      <TableCell key={cell.id}>\n                        {flexRender(\n                          cell.column.columnDef.cell,\n                          cell.getContext()\n                        )}\n                      </TableCell>\n                    ))}\n                  </TableRow>\n                ))\n              ) : (\n                <TableRow>\n                  <TableCell\n                    colSpan={table.getAllColumns().length}\n                    className=\"h-24 text-center\"\n                  >\n                    No results.\n                  </TableCell>\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </div>\n        <div className=\"flex items-center justify-between space-x-2 py-4\">\n          <div className=\"flex-1 text-sm text-muted-foreground\">\n            {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n            {table.getFilteredRowModel().rows.length} row(s) selected.\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.previousPage()}\n              disabled={!table.getCanPreviousPage()}\n            >\n              Previous\n            </Button>\n            <Button\n              variant=\"outline\"\n              size=\"sm\"\n              onClick={() => table.nextPage()}\n              disabled={!table.getCanNextPage()}\n            >\n              Next\n            </Button>\n          </div>\n        </div>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1142, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 1148, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { \n  Bar, \n  BarChart, \n  ResponsiveContainer, \n  XAxis, \n  YAxis,\n  Tooltip,\n  Area,\n  AreaChart,\n  CartesianGrid,\n  Legend,\n  Pie,\n  PieChart,\n  Cell,\n  StackedBarChart\n} from \"recharts\"\nimport { usageData } from \"@/app/usage/page\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { useState, useMemo } from \"react\"\n\nconst uniqueInstanceTypes = Array.from(new Set(usageData.map(item => item.instanceType)))\nconst uniqueBillingPeriods = Array.from(new Set(usageData.map(item => item.billingPeriod)))\n  .sort((a, b) => new Date(b) as any - new Date(a) as any)\n\nexport default function DashboardPage() {\n  const [selectedInstanceType, setSelectedInstanceType] = useState<string>(\"all\")\n  const [selectedPeriod, setSelectedPeriod] = useState<string>(\"all\")\n\n  // Filter data based on selections\n  const filteredData = useMemo(() => {\n    return usageData.filter(item => {\n      const matchesInstance = selectedInstanceType === \"all\" || item.instanceType === selectedInstanceType\n      const matchesPeriod = selectedPeriod === \"all\" || item.billingPeriod === selectedPeriod\n      return matchesInstance && matchesPeriod\n    })\n  }, [selectedInstanceType, selectedPeriod])\n\n  // Calculate metrics based on filtered data\n  const totalCost = filteredData.reduce((sum, item) => sum + item.totalCost, 0)\n  const totalHours = filteredData.reduce((sum, item) => sum + item.usageHours, 0)\n  const activeInstances = filteredData.filter(item => item.status === \"Active\").length\n  const avgCostPerHour = totalHours > 0 ? totalCost / totalHours : 0\n\n  // Prepare data for instance type distribution\n  const instanceTypeData = Object.entries(\n    filteredData.reduce((acc, item) => {\n      acc[item.instanceType] = (acc[item.instanceType] || 0) + item.usageHours\n      return acc\n    }, {} as Record<string, number>)\n  ).map(([name, hours]) => ({ name, hours }))\n\n  // Prepare data for monthly usage trend\n  const monthlyData = Object.entries(\n    filteredData.reduce((acc, item) => {\n      acc[item.billingPeriod] = {\n        period: item.billingPeriod,\n        hours: (acc[item.billingPeriod]?.hours || 0) + item.usageHours,\n        cost: (acc[item.billingPeriod]?.cost || 0) + item.totalCost\n      }\n      return acc\n    }, {} as Record<string, { period: string; hours: number; cost: number }>)\n  ).map(([_, data]) => data)\n  .sort((a, b) => new Date(b.period) as any - new Date(a.period) as any)\n\n  // Prepare data for team cost distribution\n  const teamCostData = Object.entries(\n    filteredData.reduce((acc, item) => {\n      acc[item.team] = (acc[item.team] || 0) + item.totalCost\n      return acc\n    }, {} as Record<string, number>)\n  ).map(([name, value]) => ({ name, value }))\n  .sort((a, b) => b.value - a.value)\n\n  // Prepare data for team instance type usage\n  const teamInstanceTypeData = filteredData.reduce((acc, item) => {\n    if (!acc[item.team]) {\n      acc[item.team] = {}\n    }\n    acc[item.team][item.instanceType] = (acc[item.team][item.instanceType] || 0) + item.usageHours\n    return acc\n  }, {} as Record<string, Record<string, number>>)\n\n  const stackedBarData = Object.entries(teamInstanceTypeData).map(([team, instances]) => ({\n    team,\n    ...instances\n  }))\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8', '#82ca9d', '#ffc658', '#8dd1e1', '#a4de6c', '#d0ed57']\n\n  const metrics = [\n    { \n      title: \"Total Cost\", \n      value: `$${totalCost.toFixed(2)}`,\n      description: \"Across all instances\"\n    },\n    { \n      title: \"Active Instances\", \n      value: activeInstances,\n      description: \"Currently running\"\n    },\n    { \n      title: \"Total Usage\", \n      value: `${totalHours.toFixed(1)}h`,\n      description: \"Compute hours\"\n    },\n    { \n      title: \"Avg. Cost/Hour\", \n      value: `$${avgCostPerHour.toFixed(2)}`,\n      description: \"Per instance hour\"\n    },\n  ]\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\n          <p className=\"text-muted-foreground mt-2\">\n            Overview of your compute usage and costs\n          </p>\n        </div>\n        <div className=\"flex gap-4\">\n          <div className=\"w-[200px]\">\n            <Select\n              value={selectedInstanceType}\n              onValueChange={setSelectedInstanceType}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select instance type\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Instance Types</SelectItem>\n                {uniqueInstanceTypes.map((type) => (\n                  <SelectItem key={type} value={type}>\n                    {type}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"w-[200px]\">\n            <Select\n              value={selectedPeriod}\n              onValueChange={setSelectedPeriod}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select billing period\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Periods</SelectItem>\n                {uniqueBillingPeriods.map((period) => (\n                  <SelectItem key={period} value={period}>\n                    {period}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {metrics.map((metric) => (\n          <Card key={metric.title}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">\n                {metric.title}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{metric.value}</div>\n              <p className=\"text-xs text-muted-foreground mt-1\">\n                {metric.description}\n              </p>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Instance Type Distribution</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={instanceTypeData}>\n                  <XAxis\n                    dataKey=\"name\"\n                    stroke=\"#888888\"\n                    fontSize={12}\n                    tickLine={false}\n                    axisLine={false}\n                    angle={-45}\n                    textAnchor=\"end\"\n                    height={80}\n                  />\n                  <YAxis\n                    stroke=\"#888888\"\n                    fontSize={12}\n                    tickLine={false}\n                    axisLine={false}\n                    tickFormatter={(value) => `${value}h`}\n                  />\n                  <Tooltip />\n                  <Bar\n                    dataKey=\"hours\"\n                    fill=\"#8884d8\"\n                    radius={[4, 4, 0, 0]}\n                    name=\"Usage Hours\"\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Monthly Usage Trend</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart data={monthlyData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis \n                    dataKey=\"period\"\n                    stroke=\"#888888\"\n                    fontSize={12}\n                  />\n                  <YAxis \n                    stroke=\"#888888\"\n                    fontSize={12}\n                    yAxisId=\"left\"\n                    tickFormatter={(value) => `${value}h`}\n                  />\n                  <YAxis \n                    stroke=\"#888888\"\n                    fontSize={12}\n                    yAxisId=\"right\"\n                    orientation=\"right\"\n                    tickFormatter={(value) => `$${value}`}\n                  />\n                  <Tooltip />\n                  <Legend />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"hours\"\n                    fill=\"#8884d8\"\n                    stroke=\"#8884d8\"\n                    yAxisId=\"left\"\n                    name=\"Usage Hours\"\n                    fillOpacity={0.3}\n                  />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"cost\"\n                    fill=\"#82ca9d\"\n                    stroke=\"#82ca9d\"\n                    yAxisId=\"right\"\n                    name=\"Total Cost\"\n                    fillOpacity={0.3}\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Team Cost Distribution</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={teamCostData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={({ name, percent }) => `${name} (${(percent * 100).toFixed(0)}%)`}\n                    outerRadius={100}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {teamCostData.map((_, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Tooltip formatter={(value) => `$${value.toFixed(2)}`} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Team Instance Usage</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={stackedBarData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis \n                    dataKey=\"team\" \n                    stroke=\"#888888\"\n                    fontSize={12}\n                    angle={-45}\n                    textAnchor=\"end\"\n                    height={80}\n                  />\n                  <YAxis\n                    stroke=\"#888888\"\n                    fontSize={12}\n                    tickFormatter={(value) => `${value}h`}\n                  />\n                  <Tooltip />\n                  <Legend />\n                  {Object.keys(teamInstanceTypeData[Object.keys(teamInstanceTypeData)[0]] || {}).map((instance, index) => (\n                    <Bar\n                      key={instance}\n                      dataKey={instance}\n                      stackId=\"a\"\n                      fill={COLORS[index % COLORS.length]}\n                    />\n                  ))}\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1900, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}