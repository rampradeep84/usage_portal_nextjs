{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,8JAAM,UAAU,MAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,8JAAM,UAAU,OAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,8JAAM,UAAU,OAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,8JAAM,UAAU,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG"}},
    {"offset": {"line": 104, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\", className)}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,8JAAM,UAAU,MAG5B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,WAAU;kBACb,cAAA,6LAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,8JAAM,UAAU,OAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,8JAAM,UAAU,OAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2DAA2D;QACxE,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,8JAAM,UAAU,OAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,8JAAM,UAAU,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,8JAAM,UAAU,QAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;;AAGb,aAAa,WAAW,GAAG"}},
    {"offset": {"line": 242, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 248, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAKA,MAAM,sBAAQ,8JAAM,UAAU,MAC5B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,6LAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,gWACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,MAAM,WAAW,GAAG"}},
    {"offset": {"line": 278, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 284, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/components/ui/data-table.tsx"],"sourcesContent":["import {\n  ColumnDef,\n  ColumnFiltersState,\n  SortingState,\n  flexRender,\n  getCoreRowModel,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  useReactTable,\n} from \"@tanstack/react-table\"\nimport * as React from \"react\"\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[]\n  data: TData[]\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n  data,\n}: DataTableProps<TData, TValue>) {\n  const [sorting, setSorting] = React.useState<SortingState>([])\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>([])\n  const [globalFilter, setGlobalFilter] = React.useState(\"\")\n\n  const table = useReactTable({\n    data,\n    columns,\n    getCoreRowModel: getCoreRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    onSortingChange: setSorting,\n    getSortedRowModel: getSortedRowModel(),\n    onColumnFiltersChange: setColumnFilters,\n    getFilteredRowModel: getFilteredRowModel(),\n    onGlobalFilterChange: setGlobalFilter,\n    state: {\n      sorting,\n      columnFilters,\n      globalFilter,\n    },\n  })\n\n  // Get unique values for filters\n  const getUniqueValues = (columnId: string) => {\n    const uniqueValues = new Set<string>()\n    data.forEach((row: any) => {\n      if (row[columnId]) {\n        uniqueValues.add(row[columnId])\n      }\n    })\n    return Array.from(uniqueValues).sort()\n  }\n\n  // Filter button component\n  const FilterButton = ({ columnId, value }: { columnId: string; value: string }) => {\n    const isActive = table.getColumn(columnId)?.getFilterValue() === value\n    return (\n      <Button\n        variant={isActive ? \"default\" : \"outline\"}\n        size=\"sm\"\n        className=\"mr-2 mb-2\"\n        onClick={() => {\n          if (isActive) {\n            table.getColumn(columnId)?.setFilterValue(\"\")\n          } else {\n            table.getColumn(columnId)?.setFilterValue(value)\n          }\n        }}\n      >\n        {value}\n      </Button>\n    )\n  }\n\n  return (\n    <div>\n      <div className=\"flex items-center py-4\">\n        <Input\n          placeholder=\"Search all columns...\"\n          value={globalFilter ?? \"\"}\n          onChange={(event) => setGlobalFilter(event.target.value)}\n          className=\"max-w-sm\"\n        />\n      </div>\n      \n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                            header.column.columnDef.header,\n                            header.getContext()\n                          )}\n                    </TableHead>\n                  )\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext()\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-between space-x-2 py-4\">\n        <div className=\"flex-1 text-sm text-muted-foreground\">\n          Page {table.getState().pagination.pageIndex + 1} of{\" \"}\n          {table.getPageCount()}\n        </div>\n        <div className=\"space-x-2\">\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.previousPage()}\n            disabled={!table.getCanPreviousPage()}\n          >\n            Previous\n          </Button>\n          <Button\n            variant=\"outline\"\n            size=\"sm\"\n            onClick={() => table.nextPage()}\n            disabled={!table.getCanNextPage()}\n          >\n            Next\n          </Button>\n        </div>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 514, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 520, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/app/usage/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card } from \"@/components/ui/card\"\nimport { DataTable } from \"@/components/ui/data-table\"\nimport { ArrowUpDown } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { ColumnDef } from \"@tanstack/react-table\"\n\n// Generate more realistic sample data\nexport const generateSampleData = () => {\n  const teams = [\n    \"ML Research\",\n    \"Data Science\",\n    \"Computer Vision\",\n    \"NLP Team\",\n    \"Recommendation Systems\",\n    \"Deep Learning\",\n    \"AI Infrastructure\",\n    \"Analytics\",\n    \"Model Training\",\n    \"MLOps\"\n  ]\n  \n  const instanceTypes = [\n    \"p4d.24xlarge\",  // High-performance GPU instances\n    \"p3.16xlarge\",\n    \"g5.12xlarge\",\n    \"g4dn.12xlarge\",\n    \"c6i.32xlarge\",  // Compute optimized\n    \"r6i.32xlarge\",  // Memory optimized\n    \"m6i.32xlarge\"   // General purpose\n  ]\n  const statuses = [\"Active\", \"Completed\", \"Pending\", \"Suspended\"]\n  \n  const instanceCosts = {\n    \"p4d.24xlarge\": 32.77,\n    \"p3.16xlarge\": 24.48,\n    \"g5.12xlarge\": 15.12,\n    \"g4dn.12xlarge\": 12.24,\n    \"c6i.32xlarge\": 5.44,\n    \"r6i.32xlarge\": 8.16,\n    \"m6i.32xlarge\": 6.14\n  }\n  \n  return Array.from({ length: 50 }, (_, i) => {\n    const instanceType = instanceTypes[Math.floor(Math.random() * instanceTypes.length)]\n    return {\n      id: i + 1,\n      team: teams[Math.floor(Math.random() * teams.length)],\n      instanceType: instanceType,\n      usageHours: +(Math.random() * 300).toFixed(1),\n      costPerHour: instanceCosts[instanceType],\n      totalCost: 0, // Will be calculated\n      billingPeriod: [\"Dec 2023\", \"Nov 2023\", \"Oct 2023\"][Math.floor(Math.random() * 3)],\n      status: statuses[Math.floor(Math.random() * statuses.length)]\n    }\n  }).map(item => ({\n    ...item,\n    totalCost: +(item.usageHours * item.costPerHour).toFixed(2)\n  }))\n}\n\nconst usageData = generateSampleData()\n\ntype Usage = {\n  id: number\n  team: string\n  instanceType: string\n  usageHours: number\n  costPerHour: number\n  totalCost: number\n  billingPeriod: string\n  status: string\n}\n\nconst columns: ColumnDef<Usage>[] = [\n  {\n    accessorKey: \"team\",\n    header: ({ column }) => {\n      return (\n        <Button\n          variant=\"ghost\"\n          onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n        >\n          Team\n          <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n        </Button>\n      )\n    },\n    filterFn: \"equals\"\n  },\n  {\n    accessorKey: \"instanceType\",\n    header: \"Instance Type\",\n  },\n  {\n    accessorKey: \"usageHours\",\n    header: ({ column }) => {\n      return (\n        <div className=\"text-right\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          >\n            Usage (Hours)\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        </div>\n      )\n    },\n    cell: ({ row }) => {\n      const hours = parseFloat(row.getValue(\"usageHours\"))\n      return <div className=\"text-right\">{hours.toFixed(1)}</div>\n    },\n  },\n  {\n    accessorKey: \"costPerHour\",\n    header: ({ column }) => (\n      <div className=\"text-right\">Cost/Hour ($)</div>\n    ),\n    cell: ({ row }) => {\n      const cost = parseFloat(row.getValue(\"costPerHour\"))\n      return <div className=\"text-right\">${cost.toFixed(2)}</div>\n    },\n  },\n  {\n    accessorKey: \"totalCost\",\n    header: ({ column }) => {\n      return (\n        <div className=\"text-right\">\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          >\n            Total Cost ($)\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        </div>\n      )\n    },\n    cell: ({ row }) => {\n      const amount = parseFloat(row.getValue(\"totalCost\"))\n      return <div className=\"text-right font-medium\">${amount.toFixed(2)}</div>\n    },\n  },\n  {\n    accessorKey: \"billingPeriod\",\n    header: \"Billing Period\",\n    filterFn: \"equals\"\n  },\n  {\n    accessorKey: \"status\",\n    header: \"Status\",\n    cell: ({ row }) => {\n      const status = row.getValue(\"status\") as string\n      const colorMap: { [key: string]: string } = {\n        Active: \"bg-green-100 text-green-800\",\n        Completed: \"bg-blue-100 text-blue-800\",\n        Pending: \"bg-yellow-100 text-yellow-800\",\n        Suspended: \"bg-red-100 text-red-800\"\n      }\n      return (\n        <span className={`inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ${colorMap[status]}`}>\n          {status}\n        </span>\n      )\n    },\n    filterFn: \"equals\"\n  },\n]\n\nexport default function UsagePage() {\n  return (\n    <div className=\"space-y-8\">\n      <div>\n        <h2 className=\"text-3xl font-bold tracking-tight\">Usage</h2>\n        <p className=\"text-muted-foreground mt-2\">\n          Track instance usage and costs across teams\n        </p>\n      </div>\n\n      <Card className=\"p-6\">\n        <DataTable columns={columns} data={usageData} />\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 819, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}},
    {"offset": {"line": 825, "column": 0}, "map": {"version":3,"sources":["file:///Users/ram/dev/nextjs/usage_portal_nextjs/src/app/dashboard/page.tsx"],"sourcesContent":["\"use client\"\n\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { \n  Bar, \n  BarChart, \n  ResponsiveContainer, \n  XAxis, \n  YAxis,\n  Tooltip,\n  Area,\n  AreaChart,\n  CartesianGrid,\n  Legend,\n  Pie,\n  PieChart,\n  Cell,\n  StackedBarChart\n} from \"recharts\"\nimport { generateSampleData } from \"@/app/usage/page\"\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from \"@/components/ui/select\"\nimport { useState, useMemo } from \"react\"\n\nconst usageData = generateSampleData()\n\n// Get unique instance types and billing periods\nconst uniqueInstanceTypes = Array.from(new Set(usageData.map(item => item.instanceType)))\nconst uniqueBillingPeriods = Array.from(new Set(usageData.map(item => item.billingPeriod)))\n  .sort((a, b) => new Date(b) as any - new Date(a) as any)\n\nexport default function DashboardPage() {\n  const [selectedInstanceType, setSelectedInstanceType] = useState<string>(\"all\")\n  const [selectedPeriod, setSelectedPeriod] = useState<string>(\"all\")\n\n  // Filter data based on selections\n  const filteredData = useMemo(() => {\n    return usageData.filter(item => {\n      const matchesInstance = selectedInstanceType === \"all\" || item.instanceType === selectedInstanceType\n      const matchesPeriod = selectedPeriod === \"all\" || item.billingPeriod === selectedPeriod\n      return matchesInstance && matchesPeriod\n    })\n  }, [selectedInstanceType, selectedPeriod])\n\n  // Calculate metrics based on filtered data\n  const totalCost = filteredData.reduce((sum, item) => sum + item.totalCost, 0)\n  const totalHours = filteredData.reduce((sum, item) => sum + item.usageHours, 0)\n  const activeInstances = filteredData.filter(item => item.status === \"Active\").length\n  const avgCostPerHour = totalHours > 0 ? totalCost / totalHours : 0\n\n  // Prepare data for instance type distribution\n  const instanceTypeData = Object.entries(\n    filteredData.reduce((acc, item) => {\n      acc[item.instanceType] = (acc[item.instanceType] || 0) + item.usageHours\n      return acc\n    }, {} as Record<string, number>)\n  ).map(([name, hours]) => ({ name, hours }))\n\n  // Prepare data for monthly usage trend\n  const monthlyData = Object.entries(\n    filteredData.reduce((acc, item) => {\n      acc[item.billingPeriod] = {\n        period: item.billingPeriod,\n        hours: (acc[item.billingPeriod]?.hours || 0) + item.usageHours,\n        cost: (acc[item.billingPeriod]?.cost || 0) + item.totalCost\n      }\n      return acc\n    }, {} as Record<string, { period: string; hours: number; cost: number }>)\n  ).map(([_, data]) => data)\n  .sort((a, b) => new Date(b.period) as any - new Date(a.period) as any)\n\n  // Prepare data for team cost distribution\n  const teamCostData = Object.entries(\n    filteredData.reduce((acc, item) => {\n      acc[item.team] = (acc[item.team] || 0) + item.totalCost\n      return acc\n    }, {} as Record<string, number>)\n  ).map(([name, value]) => ({ name, value }))\n  .sort((a, b) => b.value - a.value)\n\n  // Prepare data for team instance type usage\n  const teamInstanceTypeData = filteredData.reduce((acc, item) => {\n    if (!acc[item.team]) {\n      acc[item.team] = {}\n    }\n    acc[item.team][item.instanceType] = (acc[item.team][item.instanceType] || 0) + item.usageHours\n    return acc\n  }, {} as Record<string, Record<string, number>>)\n\n  const stackedBarData = Object.entries(teamInstanceTypeData).map(([team, instances]) => ({\n    team,\n    ...instances\n  }))\n\n  const COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042', '#8884d8', '#82ca9d', '#ffc658', '#8dd1e1', '#a4de6c', '#d0ed57']\n\n  const metrics = [\n    { \n      title: \"Total Cost\", \n      value: `$${totalCost.toFixed(2)}`,\n      description: \"Across all instances\"\n    },\n    { \n      title: \"Active Instances\", \n      value: activeInstances,\n      description: \"Currently running\"\n    },\n    { \n      title: \"Total Usage\", \n      value: `${totalHours.toFixed(1)}h`,\n      description: \"Compute hours\"\n    },\n    { \n      title: \"Avg. Cost/Hour\", \n      value: `$${avgCostPerHour.toFixed(2)}`,\n      description: \"Per instance hour\"\n    },\n  ]\n\n  return (\n    <div className=\"space-y-8\">\n      <div className=\"flex justify-between items-center\">\n        <div>\n          <h2 className=\"text-3xl font-bold tracking-tight\">Dashboard</h2>\n          <p className=\"text-muted-foreground mt-2\">\n            Overview of your compute usage and costs\n          </p>\n        </div>\n        <div className=\"flex gap-4\">\n          <div className=\"w-[200px]\">\n            <Select\n              value={selectedInstanceType}\n              onValueChange={setSelectedInstanceType}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select instance type\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Instance Types</SelectItem>\n                {uniqueInstanceTypes.map((type) => (\n                  <SelectItem key={type} value={type}>\n                    {type}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"w-[200px]\">\n            <Select\n              value={selectedPeriod}\n              onValueChange={setSelectedPeriod}\n            >\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select billing period\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"all\">All Periods</SelectItem>\n                {uniqueBillingPeriods.map((period) => (\n                  <SelectItem key={period} value={period}>\n                    {period}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {metrics.map((metric) => (\n          <Card key={metric.title}>\n            <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n              <CardTitle className=\"text-sm font-medium\">\n                {metric.title}\n              </CardTitle>\n            </CardHeader>\n            <CardContent>\n              <div className=\"text-2xl font-bold\">{metric.value}</div>\n              <p className=\"text-xs text-muted-foreground mt-1\">\n                {metric.description}\n              </p>\n            </CardContent>\n          </Card>\n        ))}\n      </div>\n\n      <div className=\"grid gap-4 md:grid-cols-2\">\n        <Card>\n          <CardHeader>\n            <CardTitle>Instance Type Distribution</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={instanceTypeData}>\n                  <XAxis\n                    dataKey=\"name\"\n                    stroke=\"#888888\"\n                    fontSize={12}\n                    tickLine={false}\n                    axisLine={false}\n                    angle={-45}\n                    textAnchor=\"end\"\n                    height={80}\n                  />\n                  <YAxis\n                    stroke=\"#888888\"\n                    fontSize={12}\n                    tickLine={false}\n                    axisLine={false}\n                    tickFormatter={(value) => `${value}h`}\n                  />\n                  <Tooltip />\n                  <Bar\n                    dataKey=\"hours\"\n                    fill=\"#8884d8\"\n                    radius={[4, 4, 0, 0]}\n                    name=\"Usage Hours\"\n                  />\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Monthly Usage Trend</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <AreaChart data={monthlyData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis \n                    dataKey=\"period\"\n                    stroke=\"#888888\"\n                    fontSize={12}\n                  />\n                  <YAxis \n                    stroke=\"#888888\"\n                    fontSize={12}\n                    yAxisId=\"left\"\n                    tickFormatter={(value) => `${value}h`}\n                  />\n                  <YAxis \n                    stroke=\"#888888\"\n                    fontSize={12}\n                    yAxisId=\"right\"\n                    orientation=\"right\"\n                    tickFormatter={(value) => `$${value}`}\n                  />\n                  <Tooltip />\n                  <Legend />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"hours\"\n                    fill=\"#8884d8\"\n                    stroke=\"#8884d8\"\n                    yAxisId=\"left\"\n                    name=\"Usage Hours\"\n                    fillOpacity={0.3}\n                  />\n                  <Area\n                    type=\"monotone\"\n                    dataKey=\"cost\"\n                    fill=\"#82ca9d\"\n                    stroke=\"#82ca9d\"\n                    yAxisId=\"right\"\n                    name=\"Total Cost\"\n                    fillOpacity={0.3}\n                  />\n                </AreaChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Team Cost Distribution</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <PieChart>\n                  <Pie\n                    data={teamCostData}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    labelLine={false}\n                    label={({ name, percent }) => `${name} (${(percent * 100).toFixed(0)}%)`}\n                    outerRadius={100}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                  >\n                    {teamCostData.map((_, index) => (\n                      <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n                    ))}\n                  </Pie>\n                  <Tooltip formatter={(value) => `$${value.toFixed(2)}`} />\n                </PieChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n\n        <Card>\n          <CardHeader>\n            <CardTitle>Team Instance Usage</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"h-[300px]\">\n              <ResponsiveContainer width=\"100%\" height=\"100%\">\n                <BarChart data={stackedBarData}>\n                  <CartesianGrid strokeDasharray=\"3 3\" />\n                  <XAxis \n                    dataKey=\"team\" \n                    stroke=\"#888888\"\n                    fontSize={12}\n                    angle={-45}\n                    textAnchor=\"end\"\n                    height={80}\n                  />\n                  <YAxis\n                    stroke=\"#888888\"\n                    fontSize={12}\n                    tickFormatter={(value) => `${value}h`}\n                  />\n                  <Tooltip />\n                  <Legend />\n                  {Object.keys(teamInstanceTypeData[Object.keys(teamInstanceTypeData)[0]] || {}).map((instance, index) => (\n                    <Bar\n                      key={instance}\n                      dataKey={instance}\n                      stackId=\"a\"\n                      fill={COLORS[index % COLORS.length]}\n                    />\n                  ))}\n                </BarChart>\n              </ResponsiveContainer>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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"}},
    {"offset": {"line": 1583, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}